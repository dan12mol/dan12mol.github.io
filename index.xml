<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Dev&#39;s Adventures through outer space</title>
    <link>http://replace-this-with-your-hugo-site.com/</link>
    <description>Recent content on A Dev&#39;s Adventures through outer space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Sat, 22 Aug 2015 09:02:35 +0300</lastBuildDate>
    <atom:link href="http://replace-this-with-your-hugo-site.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vim Adventures (Part 1)</title>
      <link>http://replace-this-with-your-hugo-site.com/vim-adventures-part-one/</link>
      <pubDate>Sat, 22 Aug 2015 09:02:35 +0300</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/vim-adventures-part-one/</guid>
      <description>&lt;hr /&gt;

&lt;p&gt;It’s been quite a while since my last post. I’ve left off writing for what seemed to be more important at the time. Projects, life events and other things have cluttered my schedule and I’ve left writing aside which looking back might have been a mistake. Laying down my thoughts on paper (desktop) is such a relaxing motion that I should take a note to self to do it more oftenly. I’ve decided I’d lay off the background story continuation for another time and start writing about some techie stuff.&lt;/p&gt;

&lt;p&gt;Few years ago before I had learned what the power of a text editor can be I was mostly using IDEs, which now seems pointless since they’re mostly either cluttered with things that are unnecessary or slow. I’m not looking to trash any IDE user here but my personal preference has slowly led me towards text editors. First off there was &lt;strong&gt;Sublime Text&lt;/strong&gt; which seemed like a piece of heaven to me. It has so many features and plugins and so many ways to edit text and improved productivity that it just seemed to good to be true, and indeed I’m fairly certain that it’s the most used editor at least in the web dev community. About a year ago I stumbled upon &lt;strong&gt;Atom&lt;/strong&gt; which is Github’s open source text editor. A quick look and I decided Sublime Text is definitely worth dumping for this.&lt;/p&gt;

&lt;p&gt;A few reasons why I chose Atom over Sublime Text:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Good looking Icon&lt;/li&gt;
&lt;li&gt;Open-source&lt;/li&gt;
&lt;li&gt;Built with Web technologies (HTML, CSS, JS)&lt;/li&gt;
&lt;li&gt;Hackable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;Hackable&lt;/strong&gt; part I discovered only a few months in using Atom and it was such a delightful surprise for me. I even started writing plugins and helpers on my own such as toggle. All in all Atom was quite a blast and I’m still using it intensively and it is my #1 recommendation as a text editor. Besides, I was a huge Github fan to begin with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../images/dojocat.jpg&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve heard awesome thing about &lt;strong&gt;Vim&lt;/strong&gt;. So I started running through the docs and &lt;strong&gt;vimtutor&lt;/strong&gt; I decided I’m in love with it. But the problem is it took me quite a long time to learn and quite a long time to actually be able to say that I have increased productivity using Vim rather than Atom.&lt;/p&gt;

&lt;p&gt;Anywhoo, I’ll leave a basic .vimrc below with comments as to what everything does just as a started in case you we’re thinking of picking vim up. Scroll all the way down if you don’t care about explanations and just want to get the .vimrc and get down to business.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;First things first, create a .vimrc file in your home directory by running touch ~/.vimrc. The vimrc file is loaded when vim startup and has all sorts of possibly imaginable configuration in it. This is the heart and soul of you editor customisation. Next up, lets put some stuff in it. Just paste in the commands line by line if you want them enabled.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set history=200&lt;/code&gt;&lt;br&gt;
 By default vim remembers the last 20 ex commands that you use (searches as well). This defaults that number up to 200.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set ruler&lt;/code&gt;&lt;br&gt;
This enables a line/character helper at the bottom of the screen letting you see which line and character you are currently on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set cursorline&lt;/code&gt;&lt;br&gt;
This slightly highlight the current line as a visual helper.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;syntax on&lt;/code&gt;&lt;br&gt;
Turns on syntax highlighting.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filetype plugin indent on&lt;/code&gt;&lt;br&gt;
Allows vim to auto-indent lines based on current filetype. Useful for web developers since we’re editing files with various extensions.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set tabstop=2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;set softtabstop=2&lt;/code&gt;&lt;br&gt;
Set tab length to 2 (replace number with 4 or whatever you like best).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set expandtab&lt;/code&gt;&lt;br&gt;
This converts tabs into soft tabs (spaces).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set number&lt;/code&gt;&lt;br&gt;
Displays all line numbers on the left-hand side of the editor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set wildmenu&lt;/code&gt;&lt;br&gt;
This enables navigating between different options when using tab auto-complete.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set lazyredraw&lt;/code&gt;&lt;br&gt;
This enables buffering of screen updates instead of updating all the time, effectively increasing performance&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set showmatch&lt;/code&gt;&lt;br&gt;
A must in a devs toolkit. Highlights matching paranthesis.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set incsearch&lt;/code&gt;&lt;br&gt;
Enables incremental search. Highlight matching real-time when searching&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set hlsearch&lt;/code&gt;&lt;br&gt;
Will highlight all matching results of a search query.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setnrformats=&lt;/code&gt;&lt;br&gt;
Treats all numbers as decimal. This is to be able to effectively increment number with leading zeroes. Don’t use if you work with non-decimal numbers oftenly.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There’s one more thing I want to talk about before wrapping things up, which are package managers. A big part of customizing vim are the plugins which you can find online. Having a package manager that manages all your plugins and injects them into vim can be of great help. There’s a bunch of package managers out there, I personally went with &lt;strong&gt;Pathogen&lt;/strong&gt; because it’s the first one I found and it’s great, there’s really no other reason.&lt;/p&gt;

&lt;p&gt;Go over to &lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;pathogen.vim&lt;/a&gt;, follow the instructions to install this great plugin and you’re ready to go. This will also add &lt;code&gt;execute pathogen#infect()&lt;/code&gt; to your vimrc. There’s only 2 plugins which required extra vimrc changes and those are &lt;a href=&#34;http://ethanschoonover.com/solarized&#34;&gt;Solarized&lt;/a&gt;, which is the colorscheme I use and I added&lt;br&gt;
&lt;code&gt;let g:solarized_termtrans = 1&lt;/code&gt;&lt;br&gt;
&lt;code&gt;set background=light&lt;/code&gt;&lt;br&gt;
&lt;code&gt;colorscheme solarized&lt;/code&gt;&lt;br&gt;
for it. The other one is &lt;a href=&#34;https://github.com/kien/ctrlp.vim&#34;&gt;CtrlP&lt;/a&gt; which is a fuzzy finder plugin (kindof like Cmd+P in Sublime, Atom) and it’s great but indexes files a bit slowly so I coupled it with &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;Ag&lt;/a&gt; to make it lightning fast, effectively adding another line to my vimrc.&lt;br&gt;
&lt;code&gt;let g:ctrlp_user_command = &#39;ag %s -l --nocolor -g &amp;quot;&amp;quot;&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s basically it for my .vimrc file. Stay tuned for &lt;strong&gt;Vim adventures (Part 2)&lt;/strong&gt; where I’ll be going over some basic vim commands and how to do various tasks in vim to ease your workflow.
’Til next time!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Uni and Career Boosting in a Nutshell</title>
      <link>http://replace-this-with-your-hugo-site.com/uni-and-career-boosting-in-a-nutshell/</link>
      <pubDate>Sun, 01 Mar 2015 16:10:41 +0300</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/uni-and-career-boosting-in-a-nutshell/</guid>
      <description>&lt;hr /&gt;

&lt;p&gt;The last time I left you off with the slight impression that my dreams about university being the place where I&amp;rsquo;d get to write quality code and learn how to develop actual applications and boost my career start wasn&amp;rsquo;t really as expected. That is entirely correct. In fact, at the time of this writing I&amp;rsquo;m in my 8th, and final, semester of university and I still have the strong belief that we we&amp;rsquo;re taught a load of crap. But even though the introduction has mentioned most of it, I&amp;rsquo;ll go through the process of explaining it all more in-depth.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The first semester of university was a mix between learning what I had already been taught in high-school, which is functional programming, and learning some basics of hardware programming. I can say the hardware programming part was quite fun as we had a great teacher. Apart from one professor here and there who utterly sucked at their own curricula, I must admit I liked the first semester, this was however sheer luck as I would soon find out most of the professor I would have in the future would be in the lower-end of the food chain.
By the time I reached my third semester we had began studying OOP in Java, as well as deepening our C/C++ knowledge. Some of my colleagues have started getting jobs at different companies and I was getting the feeling that this was what I was supposed to do as well. Not lingering much longer, I send my resume to a couple of companies hoping to get a job and start chipping in some money for myself. I had gotten two interviews. One was at a big corporate companies that we&amp;rsquo;re designing software for german cars like BMW, Porsche, VW and so on. The interview consisted of a technical side where a lady asked me a couple of OOP questions like &amp;lsquo;What&amp;rsquo;s an abstract class in Java?&amp;rsquo; and &amp;lsquo;What&amp;rsquo;s a constructor?&amp;rsquo;. Later on I would find out these sort of questions are not a joke, but an actual technical interview at corporate companies, the sort of which I had learned to avoid. Following this was a language interview where a lady started talking german to me to see if I can speak he language fluently (which I nailed since I had studied 8 grades with german as mother-tongue). They sent me home quickly with a promise that I would be getting a feedback on my interview as soon as possible. This of course never happened. The other interview was at a small company who we&amp;rsquo;re developing in Ruby on Rails. I had no prior knowledge on Rails so I went there blindfolded. The interview here consisted of a test (around 1h) of logical questions with a small code task at the end. We we&amp;rsquo;re 7 people total at the interview, the others we&amp;rsquo;re older than me so I can safely say I had the disadvantage of not knowing as much stuff as they did. Nevertheless, the others got sent home immediately afterwards, while I was called in to speak with a developer for another interview. We sat on a couch for about 15 minutes and spoke about what my intentions were and what I had done so far programming-wise. The reply came a few weeks afterwards stating they had thoroughly analysed my case and decided I wouldn&amp;rsquo;t have enough experience and that if I should decide to still need a job in a few years, we should keep in touch. This also never happened.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Fast forward a bit more, after the fourth semester I went abroad in Denmark for 6 weeks of summer school. This is something that my mom insisted for me to do and it turned out to be a wise decision indeed. I had opted for two courses: a 4 week course on web development and a 2 week course on developing Android apps. The best experience I got in summer school was meeting a bunch of cool people and seeing the differences between people with different nationalities. Nevertheless, let&amp;rsquo;s keep it professional. The web development course was taught by two guys which together had a web development company. One was a dev, the other a designer. The fact that this was 2012 and I was taught how to develop web apps using Microsoft Visual Studio and Flash was not a surprise for me at the time. Looking back I can see that they we&amp;rsquo;re old-school (should&amp;rsquo;ve been hinted by the fact that they we&amp;rsquo;re using IE as their default browser, before IE got big improvements). The Android course was taught by a young fellow who was CEO at a mobile app development company. I can say he was a pretty cool guy and we definitely learned a lot of stuff over the course of 2 weeks.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Around the ending of the fifth semester I had already known more programming languages like LISP, PHP, HTML ,CSS, ML, Haskell, Prolog, Assembly and I decided I&amp;rsquo;d take another shot at joining the company. Most of my colleagues already got a job by this time (I believe we we&amp;rsquo;re ~150 and around ~100 we&amp;rsquo;re employed). I was hinted that the company that we&amp;rsquo;re doing IT Consulting for Porsche we&amp;rsquo;re coming to my city so I decided to send them a resume. They replied shortly stating that a resume in English wasn&amp;rsquo;t enough and that I should send one in German, and a recommendation letter as well. I quickly translated my resume and got a recommendation letter from one of my professors in Denmark and sent them over. After a few talks over e-mails I was invited for an interview at their HQ. Here I saw a different kind of interview. Rather then being asked questions about what I know and what my plans for the future are, they presented my with what they had to offer for me to join the company. Soon afterwards I was given a task which consisted in some theoretical questions about SAP and a small practical task of writing some Java code. I had two weeks to accomplish this. Two days later I had finished it and sent it over. The reply never came back. I had sent 3 e-mails over the course of the next few months asking what is happening and until today they had never replied but they still send me e-mails wishing me happy birthday every year.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In the summer of 2014 we had to do 6 weeks worth of work at a company as a school assignment. I applied to numerous companies and got a few interviews but I only attended two of those. One was at the company I was back in 2012 (the one making car software, the one that never replied me with my interview feedback). I was scheduled for an interview about my resume and then another interview consisting of 10 short technical questions soon afterwards. They said yes. However I did not join that company. The other interview was over Skype, with a small company (~8 employees) in another city. The fact that I was to work remote attracted me and I decided to join. They we&amp;rsquo;re doing web development. And so, my career had started..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In The Beginning There Was Light</title>
      <link>http://replace-this-with-your-hugo-site.com/in-the-beginning-there-was-light/</link>
      <pubDate>Wed, 18 Feb 2015 16:10:41 +0300</pubDate>
      
      <guid>http://replace-this-with-your-hugo-site.com/in-the-beginning-there-was-light/</guid>
      <description>&lt;hr /&gt;

&lt;p&gt;So you&amp;rsquo;ve stumbled upon this dark corner of the web. You&amp;rsquo;re looking for a job. Or maybe retirement ideas as a former dev. Or perhaps you&amp;rsquo;re looking to change your current status. Regardless of choice, I&amp;rsquo;m afraid I cannot lay your options on paper and make you choose any of those. The best thing I can do is relate my story to you and hope I will shed some light on the darker areas.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;At this point you&amp;rsquo;re probably thinking to yourself, &amp;lsquo;how am I supposed to trust this guy?&amp;rsquo;. Well, truth be told you can&amp;rsquo;t so far. In order for me to gain your trust I&amp;rsquo;m going to lay out my entire story up until this point so you may know my professional background better than my own parents.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In the beginning there was light&amp;hellip;and a small 5 year old boy. Times we&amp;rsquo;re different back then. I know this might sound cliche, or something that your grandma would say, but it&amp;rsquo;s true. Back then we had a bit of both worlds. Technology was on the rise, every day you would see new games popping up with astonishing graphics (or so we thought) and miraculous gameplay. But we also we&amp;rsquo;re a more going-out generation, playing football in front of the house and getting hurt on the hard asphalt streets every day. Even so, we we&amp;rsquo;re growing together with technology, so being a gamer was as natural as a lion hunts a gazelle. I remembered when Santa Claus got me and my sister our first PC. That&amp;rsquo;s when it all started. That&amp;rsquo;s when the universe decided that I would eventually start writing this blog.
Fast-forward a few years I&amp;rsquo;m in seventh grade, having 14 years. My cousin is a few years older than me, already studying computer science in high-school. I&amp;rsquo;m going to him one day and he shows me a text-based RPG game he wrote in Borland Pascal. I remember being completely mesmerised by the thought that you&amp;rsquo;re able to create something from nothing, just by typing text. And I&amp;rsquo;m not talking poems or novels, I&amp;rsquo;m talking something that you can pass on to somebody and they may interact with it. It seemed something so far off from my knowledge base, but you know how kids are, when they set their mind to something they may as well achieve it. That&amp;rsquo;s when I first met developing. The following couple of years we&amp;rsquo;re spent learning basics of programming. I learned everything that dropped into my hands. From basic C programming to hackthissite, which was a big thing back then. I had accumulated quite some skills by the time I saw myself into high-school. Obviously I joined a computer science high-school which was to be a breeze for me since I already knew all of the stuff they taught us there.
Nevertheless, high-school was quite a disappointment as we didn&amp;rsquo;t get any programming skills out of that whatsoever. In my mind we we&amp;rsquo;re just automating math problems. Not once did we develop an actual app, or a game (back then I had always figured I&amp;rsquo;d end up a game dev). Later on I would find out that high-school was actually great for me because even though no actual dev skills we&amp;rsquo;re accumulated, we learned how to think code, which is always a great asset to have in your toolbelt. But even though I didn&amp;rsquo;t enjoy what we we&amp;rsquo;re being taught in school, even though I was quite the doofus when it came to maths and physics and even though at the Bacalaureat (which is kind of the SAT for Romanians, I guess I forgot to mention my origins) I got higher grades in languages than in computer science, I knew this was the thing for me, so I signed up for the Technical University of Cluj-Napoca, the place I imagined would teach me everything I need to know to develop high-quality software. But dreams are made to be shattered&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>